/**
 ** Componente base de DataTable
 */
import React, { useRef, useEffect } from 'react';
import { Link } from 'react-router-dom';
import $ from 'jquery';
import 'datatables.net-bs4';
import 'datatables.net-bs4/css/dataTables.bootstrap4.min.css';
import 'datatables.net-buttons-bs4';
import 'datatables.net-buttons/js/buttons.html5.js';
import 'datatables.net-buttons/js/buttons.print.js';
import 'datatables.net-buttons/js/buttons.colVis';
import 'datatables.net-buttons/js/buttons.html5';
import 'datatables.net-buttons/js/buttons.print';
import 'datatables.net-responsive-bs4';
import 'datatables.net-fixedheader-bs4';
import 'datatables.net-staterestore-bs4';
import 'datatables.net-fixedcolumns-bs4';
import 'datatables.net-rowgroup-bs4';
import 'datatables.net-scroller-bs4';
import 'datatables.net-fixedheader-bs4';
import pdfMake from 'pdfmake/build/pdfmake';
import pdfFonts from 'pdfmake/build/vfs_fonts';
const jzip = require('jzip');

pdfMake.vfs = pdfFonts.pdfMake.vfs;
window.JSZip = jzip;;

export default function TblFunc(props) {
  const tableRef = useRef();

  const buttons = [
    {
      extend:'copy',
      className: 'btn btn-secundary',
      text: '<i class="fa-solid fa-copy"></i>',
      titleAttr: 'Copiar Tabla',
    },
    {
      extend: 'csvHtml5',
      className: 'btn btn-info',
      text: '<i class="fa-solid fa-file-csv"></i>',
      titleAttr: 'Exportar a CSV',
    },
    {
      extend: 'excelHtml5',
      className: 'btn btn-success',
      text: '<i class="fas fa-file-excel"></i> ',
      title: '',
      filename: 'Cuadratura',
      footer: true,
      titleAttr: 'Exportar a Excel',
    },
    {
      extend: 'pdfHtml5',
      orientation:'landscape',
      pageSize: 'legal',
      alignment: 'center',
      className: 'btn btn-danger',
      text: '<i class="fas fa-file-pdf"></i> ',
      title: '',
      filename: 'Cuadratura',
      footer: true,
      titleAttr: 'Exportar a PDF',
    },
    {
      extend: 'print',
      className: 'btn btn-info',
      text:'<i class="fa-solid fa-print"></i>',
      titleAttr: 'Imprimir',
    },
  ];

  const editButton = (url,rut) =>{
    return (
      <Link
        to={`${url}/${rut}/edit`}
        className="btn btn-xs btn-outline-warning btn-block"
      >
        <i className="fa-solid fa-file-pen" />
      </Link>
    );
  };

  useEffect(() => {
    // console.log(tableRef.current)
    const table = $(tableRef.current).DataTable({
      language: {
        'thousands': '.',
        'decimal': ',',
        'emptyTable': 'No hay informaci√≥n',
        'info': 'Mostrando _START_ a _END_ de _TOTAL_ Registros',
        'infoEmpty': 'Mostrando 0 to 0 of 0 Registros',
        'infoFiltered': '(Filtrado de _MAX_ total entradas)',
        'infoPostFix': '',
        'lengthMenu': 'Mostrar _MENU_ Registros',
        'loadingRecords': 'Cargando...',
        'processing': 'Procesando...',
        'search': 'Buscar:',
        'zeroRecords': 'Sin resultados encontrados',
        'paginate': {
          'first': '<|',
          'last': '|>',
          'next': '>',
          'previous': '<'
        },
        // 'buttons': { copy: 'Copiar', csv: 'CSV', excel: 'Excel', pdf: 'PDF', 'print': 'Imprimir'}
      },
      data: props.data,
      columns: props.titles,
      paging: true,
      ordering: true,
      // processing: true,
      responsive: true,
      dom: 'Bfrtip',
      buttons: buttons,
      serverSide: false,
      destroy: true  // I think some clean up is happening here
    });

    // Extra step to do extra clean-up.
    return function() {
      console.log("Tabla destruida");
      table.destroy();
    }
  },[props.data]);

  return (
    <div className='tabla-responsive'>
      <table className='table table-hover table-bordered' ref={ tableRef }>
        <thead className={props.styleHeadDark && 'thead-dark'}>
        </thead>
      </table>
    </div>
  );
}
